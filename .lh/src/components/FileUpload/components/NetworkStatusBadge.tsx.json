{
    "sourceFile": "src/components/FileUpload/components/NetworkStatusBadge.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748916627079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748916627079,
            "name": "Commit-0",
            "content": "import { Badge, Button, Space, Tag, Tooltip } from \"antd\";\r\nimport { DisconnectOutlined, WifiOutlined } from \"@ant-design/icons\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface NetworkStatusBadgeProps {\r\n  networkType: string;\r\n  chunkSize: number;\r\n  fileConcurrency: number;\r\n  chunkConcurrency: number;\r\n  isOffline: boolean;\r\n  displayMode?: \"tooltip\" | \"direct\";\r\n}\r\n\r\nconst getNetworkStatusColor = (networkType: string) => {\r\n  if (networkType === \"offline\") return \"#f5222d\";\r\n  if (networkType === \"slow-2g\" || networkType === \"2g\") return \"#fa8c16\";\r\n  if (networkType === \"3g\") return \"#faad14\";\r\n  if (\r\n    networkType === \"4g\" ||\r\n    networkType === \"wifi\" ||\r\n    networkType === \"ethernet\"\r\n  )\r\n    return \"#52c41a\";\r\n  return \"#1677ff\";\r\n};\r\n\r\nconst getNetworkTypeDisplay = (networkType: string) => {\r\n  if (networkType === \"offline\") return \"离线\";\r\n  if (networkType === \"wifi\") return \"WiFi\";\r\n  if (networkType === \"ethernet\") return \"有线网络\";\r\n  return networkType.toUpperCase();\r\n};\r\n\r\nconst NetworkStatusBadge: React.FC<NetworkStatusBadgeProps> = ({\r\n  networkType,\r\n  chunkSize,\r\n  fileConcurrency,\r\n  chunkConcurrency,\r\n  isOffline,\r\n  displayMode = \"tooltip\",\r\n}) => {\r\n  const networkStatus = getNetworkTypeDisplay(networkType);\r\n  const statusColor = getNetworkStatusColor(networkType);\r\n\r\n  if (displayMode === \"direct\") {\r\n    return (\r\n      <Space size={[8, 16]} wrap align=\"center\">\r\n        <Badge\r\n          count={\r\n            isOffline ? (\r\n              <DisconnectOutlined style={{ color: \"#f5222d\" }} />\r\n            ) : (\r\n              <WifiOutlined style={{ color: statusColor }} />\r\n            )\r\n          }\r\n          size=\"small\"\r\n        >\r\n          <Button\r\n            type={isOffline ? \"default\" : \"text\"}\r\n            danger={isOffline}\r\n            style={{ position: \"relative\", zIndex: 2 }}\r\n          >\r\n            {networkStatus}\r\n          </Button>\r\n        </Badge>\r\n\r\n        {!isOffline && (\r\n          <>\r\n            <Tag color=\"blue\">\r\n              切片: {(chunkSize / (1024 * 1024)).toFixed(1)}MB\r\n            </Tag>\r\n            <Tag color=\"green\">文件并发: {fileConcurrency}</Tag>\r\n            <Tag color=\"purple\">分片并发: {chunkConcurrency}</Tag>\r\n          </>\r\n        )}\r\n        {isOffline && <Tag color=\"red\">网络已断开，无法上传文件</Tag>}\r\n      </Space>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        `网络状态: ${networkStatus}\\n` +\r\n        (!isOffline\r\n          ? `切片大小: ${(chunkSize / (1024 * 1024)).toFixed(\r\n              1\r\n            )}MB\\n文件并发: ${fileConcurrency}\\n分片并发: ${chunkConcurrency}`\r\n          : \"网络已断开，无法上传文件\")\r\n      }\r\n    >\r\n      <Badge\r\n        count={\r\n          isOffline ? (\r\n            <DisconnectOutlined style={{ color: \"#f5222d\" }} />\r\n          ) : (\r\n            <WifiOutlined style={{ color: statusColor }} />\r\n          )\r\n        }\r\n        size=\"small\"\r\n      >\r\n        <Button\r\n          type={isOffline ? \"default\" : \"text\"}\r\n          danger={isOffline}\r\n          style={{ position: \"relative\", zIndex: 2 }}\r\n        >\r\n          {networkStatus}\r\n        </Button>\r\n      </Badge>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default NetworkStatusBadge;\r\n"
        }
    ]
}