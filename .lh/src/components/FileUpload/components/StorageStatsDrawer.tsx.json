{
    "sourceFile": "src/components/FileUpload/components/StorageStatsDrawer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1748918602753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748918666437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,21 @@\n-import { Button, Card, Col, Drawer, Row, Statistic, message } from \"antd\";\r\n-import React, { useEffect, useState } from \"react\";\r\n+import { Button, Card, Col, Drawer, Row, Statistic, message } from 'antd';\r\n+import React, { useEffect, useState } from 'react';\r\n \r\n-import { getStorageStats } from \"../utils\";\r\n+import { getStorageStats } from '../utils';\r\n \r\n interface StorageStatsDrawerProps {\r\n   visible: boolean;\r\n   onClose: () => void;\r\n+  // 可选的外部加载函数\r\n+  onLoad?: () => Promise<void>;\r\n }\r\n \r\n /**\r\n  * IndexedDB 存储统计抽屉组件\r\n  * 显示文件存储的详细统计信息\r\n  */\r\n-const StorageStatsDrawer: React.FC<StorageStatsDrawerProps> = ({\r\n-  visible,\r\n-  onClose,\r\n-}) => {\r\n+const StorageStatsDrawer: React.FC<StorageStatsDrawerProps> = ({ visible, onClose, onLoad }) => {\r\n   const [statsLoading, setStatsLoading] = useState(false);\r\n   const [storageStats, setStorageStats] = useState<{\r\n     totalFiles: number;\r\n     totalSize: number;\r\n@@ -41,12 +40,23 @@\n       setStatsLoading(false);\r\n     }\r\n   };\r\n \r\n+  // 处理刷新按钮点击\r\n+  const handleRefresh = async () => {\r\n+    if (onLoad) {\r\n+      // 如果提供了外部加载函数，使用它\r\n+      await onLoad();\r\n+    } else {\r\n+      // 否则使用内部加载函数\r\n+      await loadStorageStats();\r\n+    }\r\n+  };\r\n+\r\n   // 当抽屉显示时加载数据\r\n   useEffect(() => {\r\n     if (visible) {\r\n-      loadStorageStats();\r\n+      handleRefresh();\r\n     }\r\n   }, [visible]);\r\n \r\n   return (\r\n@@ -59,20 +69,18 @@\n         open={visible}\r\n         width={400}\r\n       >\r\n         {statsLoading ? (\r\n-          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n-            加载存储统计信息...\r\n-          </div>\r\n+          <div style={{ textAlign: 'center', padding: '20px' }}>加载存储统计信息...</div>\r\n         ) : storageStats ? (\r\n           <div>\r\n             <Row gutter={[16, 16]}>\r\n               <Col span={24}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"总存储量\"\r\n                     value={storageStats.formattedSize}\r\n-                    valueStyle={{ color: \"#3f8600\" }}\r\n+                    valueStyle={{ color: '#3f8600' }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n@@ -81,41 +89,38 @@\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n-                  <Statistic\r\n-                    title=\"平均文件大小\"\r\n-                    value={storageStats.formattedAvgSize}\r\n-                  />\r\n+                  <Statistic title=\"平均文件大小\" value={storageStats.formattedAvgSize} />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"含缓存数据文件\"\r\n                     value={storageStats.filesWithBuffer}\r\n-                    valueStyle={{ color: \"#1890ff\" }}\r\n+                    valueStyle={{ color: '#1890ff' }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"无缓存数据文件\"\r\n                     value={storageStats.filesWithoutBuffer}\r\n-                    valueStyle={{ color: \"#faad14\" }}\r\n+                    valueStyle={{ color: '#faad14' }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n             </Row>\r\n-            <div style={{ marginTop: 16, textAlign: \"center\" }}>\r\n-              <Button onClick={loadStorageStats} loading={statsLoading}>\r\n+            <div style={{ marginTop: 16, textAlign: 'center' }}>\r\n+              <Button onClick={handleRefresh} loading={statsLoading}>\r\n                 刷新统计\r\n               </Button>\r\n             </div>\r\n           </div>\r\n         ) : (\r\n-          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n+          <div style={{ textAlign: 'center', padding: '20px' }}>\r\n             无法获取存储统计信息\r\n           </div>\r\n         )}\r\n       </Drawer>\r\n"
                },
                {
                    "date": 1748919123675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n-import { Button, Card, Col, Drawer, Row, Statistic, message } from 'antd';\r\n-import React, { useEffect, useState } from 'react';\r\n+import { Button, Card, Col, Drawer, Row, Statistic, message } from \"antd\";\r\n+import React, { useEffect, useState } from \"react\";\r\n \r\n-import { getStorageStats } from '../utils';\r\n+import { getStorageStats } from \"../utils\";\r\n \r\n interface StorageStatsDrawerProps {\r\n   visible: boolean;\r\n   onClose: () => void;\r\n@@ -13,9 +13,13 @@\n /**\r\n  * IndexedDB 存储统计抽屉组件\r\n  * 显示文件存储的详细统计信息\r\n  */\r\n-const StorageStatsDrawer: React.FC<StorageStatsDrawerProps> = ({ visible, onClose, onLoad }) => {\r\n+const StorageStatsDrawer: React.FC<StorageStatsDrawerProps> = ({\r\n+  visible,\r\n+  onClose,\r\n+  onLoad,\r\n+}) => {\r\n   const [statsLoading, setStatsLoading] = useState(false);\r\n   const [storageStats, setStorageStats] = useState<{\r\n     totalFiles: number;\r\n     totalSize: number;\r\n@@ -69,18 +73,20 @@\n         open={visible}\r\n         width={400}\r\n       >\r\n         {statsLoading ? (\r\n-          <div style={{ textAlign: 'center', padding: '20px' }}>加载存储统计信息...</div>\r\n+          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n+            加载存储统计信息...\r\n+          </div>\r\n         ) : storageStats ? (\r\n           <div>\r\n             <Row gutter={[16, 16]}>\r\n               <Col span={24}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"总存储量\"\r\n                     value={storageStats.formattedSize}\r\n-                    valueStyle={{ color: '#3f8600' }}\r\n+                    valueStyle={{ color: \"#3f8600\" }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n@@ -89,38 +95,41 @@\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n-                  <Statistic title=\"平均文件大小\" value={storageStats.formattedAvgSize} />\r\n+                  <Statistic\r\n+                    title=\"平均文件大小\"\r\n+                    value={storageStats.formattedAvgSize}\r\n+                  />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"含缓存数据文件\"\r\n                     value={storageStats.filesWithBuffer}\r\n-                    valueStyle={{ color: '#1890ff' }}\r\n+                    valueStyle={{ color: \"#1890ff\" }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n               <Col span={12}>\r\n                 <Card>\r\n                   <Statistic\r\n                     title=\"无缓存数据文件\"\r\n                     value={storageStats.filesWithoutBuffer}\r\n-                    valueStyle={{ color: '#faad14' }}\r\n+                    valueStyle={{ color: \"#faad14\" }}\r\n                   />\r\n                 </Card>\r\n               </Col>\r\n             </Row>\r\n-            <div style={{ marginTop: 16, textAlign: 'center' }}>\r\n+            <div style={{ marginTop: 16, textAlign: \"center\" }}>\r\n               <Button onClick={handleRefresh} loading={statsLoading}>\r\n                 刷新统计\r\n               </Button>\r\n             </div>\r\n           </div>\r\n         ) : (\r\n-          <div style={{ textAlign: 'center', padding: '20px' }}>\r\n+          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n             无法获取存储统计信息\r\n           </div>\r\n         )}\r\n       </Drawer>\r\n"
                }
            ],
            "date": 1748918602753,
            "name": "Commit-0",
            "content": "import { Button, Card, Col, Drawer, Row, Statistic, message } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { getStorageStats } from \"../utils\";\r\n\r\ninterface StorageStatsDrawerProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n/**\r\n * IndexedDB 存储统计抽屉组件\r\n * 显示文件存储的详细统计信息\r\n */\r\nconst StorageStatsDrawer: React.FC<StorageStatsDrawerProps> = ({\r\n  visible,\r\n  onClose,\r\n}) => {\r\n  const [statsLoading, setStatsLoading] = useState(false);\r\n  const [storageStats, setStorageStats] = useState<{\r\n    totalFiles: number;\r\n    totalSize: number;\r\n    formattedSize: string;\r\n    filesWithBuffer: number;\r\n    filesWithoutBuffer: number;\r\n    averageFileSize: number;\r\n    formattedAvgSize: string;\r\n  } | null>(null);\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  // 加载存储统计数据\r\n  const loadStorageStats = async () => {\r\n    setStatsLoading(true);\r\n    try {\r\n      const stats = await getStorageStats();\r\n      setStorageStats(stats);\r\n    } catch (error) {\r\n      console.error(\"获取存储统计信息失败:\", error);\r\n      messageApi.error(\"获取存储统计信息失败\");\r\n    } finally {\r\n      setStatsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 当抽屉显示时加载数据\r\n  useEffect(() => {\r\n    if (visible) {\r\n      loadStorageStats();\r\n    }\r\n  }, [visible]);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Drawer\r\n        title=\"IndexedDB 存储统计\"\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        open={visible}\r\n        width={400}\r\n      >\r\n        {statsLoading ? (\r\n          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            加载存储统计信息...\r\n          </div>\r\n        ) : storageStats ? (\r\n          <div>\r\n            <Row gutter={[16, 16]}>\r\n              <Col span={24}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"总存储量\"\r\n                    value={storageStats.formattedSize}\r\n                    valueStyle={{ color: \"#3f8600\" }}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic title=\"文件总数\" value={storageStats.totalFiles} />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"平均文件大小\"\r\n                    value={storageStats.formattedAvgSize}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"含缓存数据文件\"\r\n                    value={storageStats.filesWithBuffer}\r\n                    valueStyle={{ color: \"#1890ff\" }}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"无缓存数据文件\"\r\n                    value={storageStats.filesWithoutBuffer}\r\n                    valueStyle={{ color: \"#faad14\" }}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <div style={{ marginTop: 16, textAlign: \"center\" }}>\r\n              <Button onClick={loadStorageStats} loading={statsLoading}>\r\n                刷新统计\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            无法获取存储统计信息\r\n          </div>\r\n        )}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StorageStatsDrawer;\r\n"
        }
    ]
}